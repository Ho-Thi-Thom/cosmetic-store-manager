package GUI;

import BLL.CTHDBLL;
import BLL.HoadonBLL;
import BLL.KhachhangBLL;
import BLL.NhanvienBLL;
import BLL.SanphamBLL;
import DTO.CTHDDTO;
import DTO.HoadonDTO;
import DTO.SanphamDTO;
import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class HoadonGUI extends javax.swing.JInternalFrame {

    HoadonBLL hdBLL = new HoadonBLL();
    private ArrayList<HoadonDTO> listHD;
    CTHDBLL cthdBLL = new CTHDBLL();
    private ArrayList<CTHDDTO> listCTHD;
    SanphamBLL spBLL = new SanphamBLL();
    private ArrayList<SanphamDTO> list;
    DefaultTableModel model;
    DefaultTableModel modelHD;
    DefaultTableModel modelCTHD;
    KhachhangBLL khBLL = new KhachhangBLL();
    NhanvienBLL nvBLL = new NhanvienBLL();
    public HoadonGUI() {
        initComponents();
        try {
            UIManager.setLookAndFeel(new com.jtattoo.plaf.graphite.GraphiteLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(HoadonGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        hdBLL.loadComboboxMaKH(this.cbMakh);
        hdBLL.loadComboboxMaNV(this.cbManv);
        hdBLL.loadComboboxMaKM(this.cbMakm);
        txtNgaylap.setDate(new Date());
        listHD = hdBLL.getAllHoadonDTO();
        modelHD = (DefaultTableModel) tblHoadon.getModel();
        modelHD.setColumnIdentifiers(new Object[]{
            "STT", "Mã HD", "Mã KH", "Mã NV", "Mã KM", "Tiền KM", "Tổng tiền", "Ngày lập"
        });
        tblHoadon.setRowSorter(new TableRowSorter<TableModel>(modelHD));
        txtTimkiemhoadon.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateFilter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateFilter();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateFilter();
            }
        });
        showTableHoadon();
        //tăng mahd
        model = (DefaultTableModel) tblSanpham.getModel();
        txtTienkmhd.setText("0");
        txtTongtienhoadon.setText("0");
        txtTienkmcthd.setText("0");
        txtTongtien.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHoadon = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMahd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTienkmhd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        cbMakh = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        cbManv = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        cbMakm = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTongtien = new javax.swing.JTextField();
        txtNgaylap = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnXuat = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        cbTimkiemhoadon = new javax.swing.JComboBox<>();
        txtTimkiemhoadon = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblChitiethoadon = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        cbMasp = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDongia = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtSoluong = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtTienkmcthd = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtThanhtien = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        btnThem1 = new javax.swing.JButton();
        btnSua1 = new javax.swing.JButton();
        btnXoa1 = new javax.swing.JButton();
        btnReset1 = new javax.swing.JButton();
        cbMahd = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblSanpham = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtTongtienhoadon = new javax.swing.JTextField();

        setTitle("Hóa đơn và chi tiết hóa đơn");

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin hóa đơn", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(255, 51, 51))); // NOI18N

        tblHoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblHoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoadonMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblHoadon);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText(" Mã HD :");

        txtMahd.setForeground(new java.awt.Color(255, 51, 51));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText(" Tiền KM :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText(" Mã KH :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText(" Mã KM :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText(" Mã NV :");

        jScrollPane3.setViewportView(cbMakh);

        jScrollPane4.setViewportView(cbManv);

        jScrollPane5.setViewportView(cbMakm);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText(" Tổng tiền :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText(" Ngày lập :");

        txtNgaylap.setDateFormatString("yyyy-MM-dd");

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/them.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(null);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sua.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorder(null);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorder(null);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnXuat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Arrow Up.png"))); // NOI18N
        btnXuat.setText("Xuất");
        btnXuat.setBorder(null);
        btnXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(btnXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(btnXuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        cbTimkiemhoadon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã HD", "Mã KH", "Mã NV", "Ngày lập" }));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(cbTimkiemhoadon, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(txtTimkiemhoadon, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbTimkiemhoadon, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(txtTimkiemhoadon))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMahd, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTienkmhd, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNgaylap, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMahd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTienkmhd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgaylap, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết hóa đơn", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 16), new java.awt.Color(255, 0, 0))); // NOI18N

        tblChitiethoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblChitiethoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChitiethoadonMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblChitiethoadon);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText(" Mã HD :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText(" Mã SP :");

        jScrollPane7.setViewportView(cbMasp);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText(" Đơn giá :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText(" Số lượng :");

        txtSoluong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoluongActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText(" Tiền KM :");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText(" Thành tiền :");

        txtThanhtien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThanhtienActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        btnThem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/them.png"))); // NOI18N
        btnThem1.setText("Thêm");
        btnThem1.setBorder(null);
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        btnSua1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sua.png"))); // NOI18N
        btnSua1.setText("Sửa");
        btnSua1.setBorder(null);
        btnSua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua1ActionPerformed(evt);
            }
        });

        btnXoa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/xoa.png"))); // NOI18N
        btnXoa1.setText("Xóa");
        btnXoa1.setBorder(null);
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        btnReset1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        btnReset1.setText("Reset");
        btnReset1.setBorder(null);
        btnReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(btnSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(btnReset1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnThem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSua1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(btnXoa1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnReset1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 0, 0))); // NOI18N
        jScrollPane8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane8MouseClicked(evt);
            }
        });

        tblSanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblSanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanphamMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblSanpham);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(txtDongia)
                    .addComponent(cbMahd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSoluong))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTienkmcthd))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtThanhtien))))
            .addComponent(jScrollPane8)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbMahd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTienkmcthd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDongia, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtThanhtien, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel14.setText("Tổng tiền :");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTongtienhoadon, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtTongtienhoadon, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1450, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private int kt() {
        int fag = 1;
        if (txtMahd.getText().length() == 0) {
            fag = 0;
        }
        return fag;
    }
    private void tblHoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoadonMouseClicked
        int i = tblHoadon.getSelectedRow();
        txtMahd.setText(tblHoadon.getModel().getValueAt(i, 1).toString());
        txtMahd.setEditable(false);
        cbMakh.setSelectedItem(tblHoadon.getModel().getValueAt(i, 2).toString());
        cbManv.setSelectedItem(tblHoadon.getModel().getValueAt(i, 3).toString());
        cbMakm.setSelectedItem(tblHoadon.getModel().getValueAt(i, 4).toString());
        txtTienkmhd.setText(tblHoadon.getModel().getValueAt(i, 5).toString());
        txtTongtien.setText(tblHoadon.getModel().getValueAt(i, 6).toString());
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String) modelHD.getValueAt(i, 7));
            txtNgaylap.setDate(date);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        btnThem.setEnabled(false);
        btnThem1.setEnabled(true);
        txtTongtienhoadon.setText(tblHoadon.getModel().getValueAt(i, 6).toString());
        //không cho sua
        cbMakm.setEnabled(false);
        txtTienkmhd.setEditable(false);
        txtTongtien.setEditable(false);
        txtNgaylap.setEnabled(false);
        txtTongtienhoadon.setEditable(false);
        txtTienkmcthd.setEditable(false);
        //-------------------------------------
        listCTHD = cthdBLL.getCTHDDTO(tblHoadon.getModel().getValueAt(i, 1).toString());
        modelCTHD = (DefaultTableModel) tblChitiethoadon.getModel();
        modelCTHD.setColumnIdentifiers(new Object[]{
            "STT", "Mã HD", "Mã SP", "Số lượng", "Đơn giá", "Tiền khuyến mãi", "Thành tiền"
        });
        showTableCTHD();
        resetCTHD();
        cbMahd.setText(tblHoadon.getModel().getValueAt(i, 1).toString());
        //------------------------------------
        list = spBLL.getAllSanphamDTO();
        model = (DefaultTableModel) tblSanpham.getModel();
        model.setColumnIdentifiers(new Object[]{
            "STT", "Mã SP", "Tên SP", "Số lượng", "Đơn giá", "Đơn vị tính",
            "Mã loại", "Nhà sản xuất"
        });
        showTableSanpham();
    }//GEN-LAST:event_tblHoadonMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (kt() == 1) {
            HoadonDTO hdDTO = new HoadonDTO();
            hdDTO.setMaHD(txtMahd.getText());
            hdDTO.setMaKH(cbMakh.getSelectedItem().toString());
            hdDTO.setMaNV(cbManv.getSelectedItem().toString());
            hdDTO.setMaKM(cbMakm.getSelectedItem().toString());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(txtNgaylap.getDate());
            hdDTO.setNgaylap(date);
            hdDTO.setTienKM(txtTienkmhd.getText());
            hdDTO.setTongtien(txtTongtien.getText());
            for (HoadonDTO sp : listHD) {
                if (sp.getMaHD().equals(txtMahd.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "Đã tồn tại mã hoá đơn");
                    return;
                }
            }
            try {
                if (hdBLL.addHoadonDTO(hdDTO)) {
                    JOptionPane.showMessageDialog(rootPane, "Thêm thành công");
                    listHD.add(hdDTO);
                    showResultHoadon();
                    resetHoadon();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Thêm không thành công ");
                }
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(rootPane, "Thêm không thành công ");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Thông tin bạn nhập chưa đủ :");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int selectedIndex = tblHoadon.getSelectedRow();
        if (listHD.size() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                    "Hãy nhập thêm Hoa đơn rồi sửa");
        } else if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane,
                    "Hãy chọn dòng có thông tin  cần sửa rồi ấn sửa");
        } else {
            HoadonDTO hdDTO = new HoadonDTO();
            txtMahd.setEditable(true);
            hdDTO.setMaHD(txtMahd.getText());
            hdDTO.setMaKH(cbMakh.getSelectedItem().toString());
            hdDTO.setMaNV(cbManv.getSelectedItem().toString());
            hdDTO.setMaKM(cbMakm.getSelectedItem().toString());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(txtNgaylap.getDate());
            hdDTO.setNgaylap(date);
            hdDTO.setTienKM(txtTienkmhd.getText());
            hdDTO.setTongtien(txtTongtien.getText());
            try {
                if (hdBLL.suaHoadonDTO(hdDTO)) {
                    JOptionPane.showMessageDialog(rootPane, "Sửa thành công !");
                    modelHD.setRowCount(0);
                    listHD = hdBLL.getAllHoadonDTO();
                    showTableHoadon();
                    resetHoadon();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Sửa không thành công 123");
                }
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(rootPane, "Sửa không thành công ");
            }
        }
        btnThem.setEnabled(true);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetHoadon();
        btnThem.setEnabled(true);
    }//GEN-LAST:event_btnResetActionPerformed
    private int kt1() {
        int fag = 1;
        if (cbMahd.getText().length() == 0) {
            fag = 0;
        } else if (cbMasp.getText().length() == 0) {
            fag = 0;
        } else if (txtSoluong.getText().length() == 0) {
            fag = 0;
        } else if (txtThanhtien.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn quên enter đối với txtSoluong");
            fag = 0;
        } else if (isNumeric(txtSoluong.getText()) == false) {
            fag = 0;
        }
        return fag;
    }
    private void tblChitiethoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChitiethoadonMouseClicked
        int i = tblChitiethoadon.getSelectedRow();
        cbMahd.setText(tblChitiethoadon.getModel().getValueAt(i, 1).toString());
        cbMasp.setText(tblChitiethoadon.getModel().getValueAt(i, 2).toString());
        txtSoluong.setText(tblChitiethoadon.getModel().getValueAt(i, 3).toString());
        txtDongia.setText(tblChitiethoadon.getModel().getValueAt(i, 4).toString());
        txtTienkmcthd.setText(tblChitiethoadon.getModel().getValueAt(i, 5).toString());
        txtThanhtien.setText(tblChitiethoadon.getModel().getValueAt(i, 6).toString());
        //-------------------------------
        btnThem1.setEnabled(false);
        txtDongia.setEditable(false);
        txtThanhtien.setEditable(false);
        cbMahd.setEditable(false);
        cbMasp.setEnabled(false);

        //--------------------------
    }//GEN-LAST:event_tblChitiethoadonMouseClicked
    public static boolean isNumeric(String str) { //kiểm tra có phải số kiểu INT
        try {
            Integer.parseInt(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public static boolean isNumericfloat(String str) { //kiểm tra có phải số kiểu DOUBLE
        try {
            Float.parseFloat(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    private void txtSoluongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoluongActionPerformed
        int t = cthdBLL.getSoluong(cbMasp.getText());
        if (isNumeric(txtSoluong.getText())) {
            int f = Integer.parseInt(txtSoluong.getText());
            float tongtien = (float) Integer.parseInt(txtSoluong.getText()) * Float.parseFloat(txtDongia.getText());
            String mahd = cbMahd.getText().trim();
            String makmhd = cthdBLL.laymaKM(mahd);
            int tienKM = cthdBLL.laycachgiam(makmhd, cbMasp.getText());
            //------------------------------------
            Date bd = cthdBLL.layngayBD(makmhd);
            //JOptionPane.showMessageDialog(rootPane, bd);
            Date kt = cthdBLL.layngayKT(makmhd);
            // JOptionPane.showMessageDialog(rootPane, kt);
            Date ngaylaphd = cthdBLL.layngayCT(mahd);
            //  JOptionPane.showMessageDialog(rootPane, ngaylaphd);
            int a = 1, b = 1;
            if (bd.equals(ngaylaphd) || kt.equals(ngaylaphd)) {
                a = 0;
            } else if (bd.before(ngaylaphd) && kt.after(ngaylaphd)) {
                b = 0;
            }
            if (a == 0 || b == 0) {
                float tongtienKM = (((float) tienKM) / 100) * tongtien;
                if (f <= t) {
                    try {
                        float re = tongtien - tongtienKM;
                        txtTienkmcthd.setText(String.valueOf(tongtienKM));
                        txtThanhtien.setText(String.valueOf(re));

                    } catch(Exception e) {
                        e.printStackTrace();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Số lượng trong kho chỉ còn" + t + " Sản phẩm");
                    txtSoluong.setText("");
                }
            } else {
                txtTienkmcthd.setText("0");
                txtThanhtien.setText(String.valueOf(tongtien));
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, " Số lượng phải là số");
            txtSoluong.setText("");
            txtThanhtien.setText("");
        }
    }//GEN-LAST:event_txtSoluongActionPerformed

    private void txtThanhtienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThanhtienActionPerformed
        if (isNumericfloat(txtSoluong.getText())) {
            Laykmsanpham();
            suaTienkmhd();
        }
    }//GEN-LAST:event_txtThanhtienActionPerformed

    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        int i = tblSanpham.getSelectedRow();
        String temp = tblSanpham.getValueAt(i, 1).toString();
        int temp2 = 0;
        for (int j = 0; j < tblChitiethoadon.getRowCount(); j++) {
            if (tblChitiethoadon.getValueAt(j, 2).equals(temp)) {
                temp2 = 1;
                break;
            }
        }
        if (temp2 == 1) {
            JOptionPane.showMessageDialog(rootPane, "Sản phẩm đã tồn tại ");
            resetCTHD();
            return;
        }

        if (kt1() == 1) {
            CTHDDTO cthdDTO = new CTHDDTO();
            cthdDTO.setMaHD(cbMahd.getText());
            cthdDTO.setMaSP(cbMasp.getText());
            cthdDTO.setSoluong(Integer.parseInt(txtSoluong.getText()));
            cthdDTO.setDongiaban(Float.parseFloat(txtDongia.getText()));
            cthdDTO.setTienkhuyenmaisp(Float.parseFloat(txtTienkmcthd.getText()));
            cthdDTO.setThanhtien(Float.parseFloat(txtThanhtien.getText()));
            try {
                if (cthdBLL.addCTHDDTO(cthdDTO)) {
                    JOptionPane.showMessageDialog(rootPane, "Thêm thành công");
                    listCTHD.add(cthdDTO);//them vao danh sach
                    showResultCTHD();
                    //  resetCTHD();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Thêm không thành công ");
                }
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(rootPane, "Thêm không thành công ");
            }
            //-------------
            float z = cthdBLL.tongkmct(cbMahd.getText());
            cthdBLL.suaTienkm(z, cbMahd.getText());
            //----
            tongtienupdate(cbMahd.getText());
            Laykmhoadon();
            resetHoadon();
            //--------UPDATE SO LUONG
            int t = cthdBLL.getSoluong(cbMasp.getText());
            int k1 = Integer.parseInt(txtSoluong.getText());
            int slcl = t - k1;
            soluongupdate(slcl, cbMasp.getText());
            resetCTHD();

        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập đủ thông tin");
        }
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void btnSua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua1ActionPerformed
        if (kt1() == 1) {
            int slbd = cthdBLL.laysoluongsp(cbMasp.getText(), cbMahd.getText());
            int i = tblHoadon.getSelectedRow();
            int selectedIndex = tblChitiethoadon.getSelectedRow();
            if (listCTHD.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane,
                        "Hãy nhập thêm Chi tiết hóa  đơn rồi sửa");
            } else if (selectedIndex == -1) {
                JOptionPane.showMessageDialog(rootPane,
                        "Hãy chọn dòng có thông tin  cần sửa rồi ấn sửa");
            } else {
                CTHDDTO cthdDTO = new CTHDDTO();
                cthdDTO.setMaHD(cbMahd.getText());
                cthdDTO.setMaSP(cbMasp.getText());
                cthdDTO.setSoluong(Integer.parseInt(txtSoluong.getText()));
                cthdDTO.setDongiaban(Float.parseFloat(txtDongia.getText()));
                cthdDTO.setTienkhuyenmaisp(Float.parseFloat(txtTienkmcthd.getText()));
                cthdDTO.setThanhtien(Float.parseFloat(txtThanhtien.getText()));
                try {
                    if (cthdBLL.suaCTHDDTO(cthdDTO)) {
                        JOptionPane.showMessageDialog(rootPane, "Sửa thành công !");
                        modelCTHD.setRowCount(0);
                        listCTHD = cthdBLL.getCTHDDTO(txtMahd.getText());
                        showTableCTHD();
                        //  resetCTHD();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Sửa không thành công ");
                    }
                } catch (NullPointerException e) {
                    JOptionPane.showMessageDialog(rootPane, "Sửa không thành công ");
                }
            }
            btnThem1.setEnabled(true);
            //----------------
            float z = cthdBLL.tongkmct(cbMahd.getText());
            cthdBLL.suaTienkm(z, cbMahd.getText());
            tongtienupdate(cbMahd.getText());
            Laykmhoadon();
            resetHoadon();

            //--------UPDATE SO LUONG
            //      Số lượng sản phẩm ban đầu
            //      int slbd =cthdBLL.laysoluongsp(cbMasp.getText(),cbMahd.getText());
            //      Số lượng sản phẩm có trong kho
            int t = cthdBLL.getSoluong(cbMasp.getText());
            //      So lượng sản phẩm đã sửa thành
            int k = Integer.parseInt(txtSoluong.getText());
            int slcl = 0;
            if (k > slbd) {
                int f = k - slbd;
                slcl = t - f;
            } else {
                int f = slbd - k;
                slcl = t + f;
            }
            soluongupdate(slcl, cbMasp.getText());
            resetCTHD();
            //-------

        } else {
            JOptionPane.showMessageDialog(rootPane, "Thông tin chưa đủ");
        }
    }//GEN-LAST:event_btnSua1ActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        int slbd = cthdBLL.laysoluongsp(cbMasp.getText(), cbMahd.getText());//la đời
        int i = tblHoadon.getSelectedRow();
        int removeIndex = tblChitiethoadon.getSelectedRow();
        if (removeIndex == -1) {
            JOptionPane.showMessageDialog(rootPane,
                    "Hãy chọn một dòng rồi ấn nút xóa");
        } else if (listHD.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane,
                    "Không có thông tin  nào để xóa");
        } else {
            CTHDDTO cthdDTO = new CTHDDTO();
            cthdDTO.setMaHD(cbMahd.getText());
            cthdDTO.setMaSP(cbMasp.getText());
            if (JOptionPane.showConfirmDialog(this, "Delete chi tiết hóa đơn ?", "Confirm",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                if (cthdBLL.xoaCTHDDTO(cthdDTO)) {
                    modelCTHD.setRowCount(0);
                    listCTHD = cthdBLL.getCTHDDTO(cbMahd.getText());
                    //                    resetCTHD();//chưa resetmahd
                    //                    cbMahd.setText("");
                    showTableCTHD();
                } else {
                    JOptionPane.showMessageDialog(rootPane, " Xóa không thành công DAL");
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Bạn đã không đồng ý xóa ");
            }
        }
        btnThem1.setEnabled(true);
        //------------------

        float z = cthdBLL.tongkmct(cbMahd.getText());
        cthdBLL.suaTienkm(z, cbMahd.getText());
        tongtienupdate(cbMahd.getText());
        Laykmhoadon();
        resetHoadon();
        //-------------

        //--------UPDATE SO LUONG
        int t = cthdBLL.getSoluong(cbMasp.getText());
        int slcl = t + slbd;
        soluongupdate(slcl, cbMasp.getText());
        //-------
        resetCTHD();//chưa resetmahd
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void btnReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset1ActionPerformed
        resetCTHD();
        btnThem1.setEnabled(true);
    }//GEN-LAST:event_btnReset1ActionPerformed

    private void tblSanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanphamMouseClicked
        int i = tblSanpham.getSelectedRow();
        cbMasp.setText(tblSanpham.getModel().getValueAt(i, 1).toString());
        cbMasp.setEnabled(false);
        txtDongia.setText(tblSanpham.getModel().getValueAt(i, 4).toString());
    }//GEN-LAST:event_tblSanphamMouseClicked

    private void jScrollPane8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane8MouseClicked

    }//GEN-LAST:event_jScrollPane8MouseClicked

    private void btnXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatActionPerformed
        // TODO add your handling code here:
        int selectedIndex = tblHoadon.getSelectedRow();
        HoadonDTO hdDTO = new HoadonDTO();
        ArrayList<CTHDDTO> listDTO = new ArrayList<CTHDDTO>();
        if (listHD.size() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                    "Hãy nhập thêm Hoá đơn rồi xuất");
        } else if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane,
                    "Hãy chọn dòng có thông tin cần xuất rồi ấn xuất");
        } else {
            hdDTO.setMaHD(txtMahd.getText());
            hdDTO.setMaKH(cbMakh.getSelectedItem().toString());
            hdDTO.setMaNV(cbManv.getSelectedItem().toString());
            hdDTO.setMaKM(cbMakm.getSelectedItem().toString());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(txtNgaylap.getDate());
            hdDTO.setNgaylap(date);
            hdDTO.setTienKM(txtTienkmhd.getText());
            hdDTO.setTongtien(txtTongtien.getText());

            //Get CTHD 
            listDTO = cthdBLL.getCTHDDTO(hdDTO.getMaHD());
        }

        try {
            String file_name = "C:\\temp\\" + hdDTO.getMaHD() + ".pdf";
            Document document = new Document();
            BaseFont bf = BaseFont.createFont("D:\\sqljdbc_6.0\\enu\\vuArial.ttf",
                    BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            Font font = new Font(bf, 10);
            PdfWriter.getInstance(document, new FileOutputStream(file_name));

            document.open();
            
            Paragraph heading = new Paragraph("Hoá đơn",font);
            heading.setAlignment(Paragraph.ALIGN_CENTER);
            document.add(heading);
            Paragraph borderTop = new Paragraph("Mã hoá đơn: " + hdDTO.getMaHD(), font); //30 -
            Paragraph para2 = new Paragraph("Tên khách hàng: " + khBLL.SearchDTO(hdDTO.getMaKH()) + "     Tên nhân viên: " + nvBLL.SearchDTO(hdDTO.getMaNV()) + "", font);
            Paragraph para3 = new Paragraph("Ngày lập hoá đơn: " + hdDTO.getNgaylap() + "     Mã khuyến mãi: " + hdDTO.getMaKM() + "", font);
            Paragraph para4 = new Paragraph("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
            Paragraph para5 = new Paragraph(" ");
            document.add(borderTop);
            document.add(para2);
            document.add(para3);
            document.add(para4);
            document.add(para5);
            PdfPTable table = new PdfPTable(5);
            PdfPCell c1 = new PdfPCell(new Phrase("Tên sản phẩm", font));
            table.addCell(c1);

            c1 = new PdfPCell(new Phrase("Đơn giá", font));
            table.addCell(c1);

            c1 = new PdfPCell(new Phrase("Số lượng", font));
            table.addCell(c1);

            c1 = new PdfPCell(new Phrase("Tiền khuyến mãi", font));
            table.addCell(c1);

            c1 = new PdfPCell(new Phrase("Thành tiền", font));
            table.addCell(c1);
            table.setHeaderRows(1);
            
            for (CTHDDTO cthdDTO : listDTO) {
                table.addCell(new Phrase(spBLL.SearchDTO(cthdDTO.getMaSP()),font));
                table.addCell(new Phrase(""+cthdDTO.getDongiaban(),font));
                table.addCell(new Phrase(""+cthdDTO.getSoluong(),font));
                table.addCell(new Phrase(""+cthdDTO.getTienkhuyenmaisp(),font));
                table.addCell(new Phrase(""+cthdDTO.getThanhtien(),font));
                /*
                Paragraph para5 = new Paragraph(spBLL.searchDTO(cthdDTO.getMaSP()) + "            "
                        + cthdDTO.getDongiaban() + "       " + cthdDTO.getSoluong() + "        "
                        + cthdDTO.getTienkhuyenmaisp() + "      " + cthdDTO.getThanhtien(), font);
                document.add(para5);*/
            }
            
            document.add(table);
            Paragraph para6 = new Paragraph("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
            document.add(para6);
            Paragraph para7 = new Paragraph("Tiền khuyến mãi: "+hdDTO.getTienKM()+"     Tổng cộng: "+hdDTO.getTongtien(),font);
            document.add(para7);
            JOptionPane.showMessageDialog(rootPane, "Xuất file pdf thành công !!!!");
            document.close();
        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_btnXuatActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReset1;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSua1;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThem1;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JButton btnXuat;
    private javax.swing.JTextField cbMahd;
    private javax.swing.JComboBox<String> cbMakh;
    private javax.swing.JComboBox<String> cbMakm;
    private javax.swing.JComboBox<String> cbManv;
    private javax.swing.JTextField cbMasp;
    private javax.swing.JComboBox<String> cbTimkiemhoadon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable tblChitiethoadon;
    private javax.swing.JTable tblHoadon;
    private javax.swing.JTable tblSanpham;
    private javax.swing.JTextField txtDongia;
    private javax.swing.JTextField txtMahd;
    private com.toedter.calendar.JDateChooser txtNgaylap;
    private javax.swing.JTextField txtSoluong;
    private javax.swing.JTextField txtThanhtien;
    private javax.swing.JTextField txtTienkmcthd;
    private javax.swing.JTextField txtTienkmhd;
    private javax.swing.JTextField txtTimkiemhoadon;
    private javax.swing.JTextField txtTongtien;
    private javax.swing.JTextField txtTongtienhoadon;
    // End of variables declaration//GEN-END:variables
public void showTableHoadon() {
        modelHD.setRowCount(0);
        int i = 1;
        for (HoadonDTO hdDTO : listHD) {
            modelHD.addRow(new Object[]{
                i++, hdDTO.getMaHD(), hdDTO.getMaKH(), hdDTO.getMaNV(), hdDTO.getMaKM(), hdDTO.getTienKM(),
                hdDTO.getTongtien(), hdDTO.getNgaylap()
            });
        }

    }

    public void showResultHoadon() {
        int i = listHD.size();
        HoadonDTO hdDTO = listHD.get(listHD.size() - 1);
        modelHD.addRow(new Object[]{
            i++, hdDTO.getMaHD(), hdDTO.getMaKH(), hdDTO.getMaNV(), hdDTO.getMaKM(), hdDTO.getTienKM(), hdDTO.getTongtien(),
            hdDTO.getNgaylap()
        });
    }

    public void resetHoadon() {
        txtMahd.setText("");
        txtMahd.setEditable(true);
        txtNgaylap.setEnabled(true);
        txtNgaylap.setDate(new Date());
        cbMakh.setSelectedIndex(0);
        cbMakm.setEnabled(true);
        cbMakm.setSelectedIndex(0);
        cbManv.setSelectedIndex(0);
        txtTienkmhd.setText("0");
        txtTongtien.setText("0");
    }

    public void showTableCTHD() {
        modelCTHD.setRowCount(0);
        int i = 1;
        for (CTHDDTO cthdDTO : listCTHD) {
            modelCTHD.addRow(new Object[]{
                i++, cthdDTO.getMaHD(), cthdDTO.getMaSP(), cthdDTO.getSoluong(), cthdDTO.getDongiaban(), cthdDTO.getTienkhuyenmaisp(),
                cthdDTO.getThanhtien()
            });
        }
    }

    public void showResultCTHD() {
        int i = listCTHD.size();
        CTHDDTO cthdDTO = listCTHD.get(listCTHD.size() - 1);
        modelCTHD.addRow(new Object[]{
            i++, cthdDTO.getMaHD(), cthdDTO.getMaSP(), cthdDTO.getSoluong(), cthdDTO.getDongiaban(), cthdDTO.getTienkhuyenmaisp(), cthdDTO.getThanhtien()
        });
    }

    public void resetCTHD() {
        //cbMahd.setSelectedIndex(1);
        cbMasp.setText("");
        txtSoluong.setText("");
        txtDongia.setText("");
        txtTienkmcthd.setText("0");
        txtThanhtien.setText("");
    }

    public void tongtienupdate(String mahd) {
        float t = cthdBLL.Tongtien(mahd);
        String s = String.valueOf(t);
        txtTongtienhoadon.setText(s);
        cthdBLL.suaTongtien(t, mahd);
//        listHD = new HoadonBLL().getAllHoadonDTO();
//        showTableHoadon();

    }

    public void soluongupdate(int soluong, String masp) {
        cthdBLL.suasoluong(soluong, masp);
        list = new SanphamBLL().getAllSanphamDTO();
        showTableSanpham();
        listHD = new HoadonBLL().getAllHoadonDTO();
        showTableHoadon();
        listCTHD = new CTHDBLL().getCTHDDTO(cbMahd.getText());
        showTableCTHD();
    }

    public void showTableSanpham() {
        int i = 1;
        model.setRowCount(0);
        for (SanphamDTO spDTO : list) {
            model.addRow(new Object[]{
                i++, spDTO.getMasp(), spDTO.getTensp(), spDTO.getSoluong(),
                spDTO.getDongia(), spDTO.getDonvitinh(),
                spDTO.getMaloai(), spDTO.getMaNSX()
            });
        }
    }

    public void Laykmhoadon() {
        String mahd = cbMahd.getText().trim();
        String makmhd = cthdBLL.laymaKM(mahd);
        float tienkhuyenmaihd = 0;
        switch (makmhd) {
            case "KM001": {
                Date bd = cthdBLL.layngayBD(makmhd);
                //JOptionPane.showMessageDialog(rootPane, bd);
                Date kt = cthdBLL.layngayKT(makmhd);
                // JOptionPane.showMessageDialog(rootPane, kt);
                Date ngaylaphd = cthdBLL.layngayCT(mahd);
                //  JOptionPane.showMessageDialog(rootPane, ngaylaphd);
                int a = 1, b = 1;
                float z;
                if (bd.equals(ngaylaphd) || kt.equals(ngaylaphd)) {
                    a = 0;
                } else if (bd.before(ngaylaphd) && kt.after(ngaylaphd)) {
                    b = 0;
                }
                if (a == 0 || b == 0) {
                    float t = cthdBLL.Tongtien(mahd);
                    if (t > 500000) {
                        z = t * 5 / 100;
                    } else {
                        z = 0;
                    }
                    tienkhuyenmaihd = z;
                    cthdBLL.suaTienkm(z, mahd);
                } else {
                    cthdBLL.suaTienkm(0, mahd);
                }
                break;
            }
            case "KM002": {
                Date bd = cthdBLL.layngayBD(makmhd);
                // JOptionPane.showMessageDialog(rootPane, bd);
                Date kt = cthdBLL.layngayKT(makmhd);
                // JOptionPane.showMessageDialog(rootPane, kt);
                Date ngaylaphd = cthdBLL.layngayCT(mahd);
                // JOptionPane.showMessageDialog(rootPane, ngaylaphd);
                int a = 1, b = 1;
                float z;
                if (bd.equals(ngaylaphd) || kt.equals(ngaylaphd)) {
                    a = 0;
                } else if (bd.before(ngaylaphd) && kt.after(ngaylaphd)) {
                    b = 0;
                }
                if (a == 0 || b == 0) {
                    float t = cthdBLL.Tongtien(mahd);
                    if (t > 1000000) {
                        z = t * 7 / 100;
                    } else {
                        z = 0;
                    }
                    tienkhuyenmaihd = z;
                    cthdBLL.suaTienkm(z, mahd);
                } else {
                    cthdBLL.suaTienkm(0, mahd);
                }
                break;
            }
            case "KM003": {
                Date bd = cthdBLL.layngayBD(makmhd);
                // JOptionPane.showMessageDialog(rootPane, bd);
                Date kt = cthdBLL.layngayKT(makmhd);
                // JOptionPane.showMessageDialog(rootPane, kt);
                Date ngaylaphd = cthdBLL.layngayCT(mahd);
                // JOptionPane.showMessageDialog(rootPane, ngaylaphd);
                int a = 1, b = 1;
                float z;
                if (bd.equals(ngaylaphd) || kt.equals(ngaylaphd)) {
                    a = 0;
                } else if (bd.before(ngaylaphd) && kt.after(ngaylaphd)) {
                    b = 0;
                }
                if (a == 0 || b == 0) {
                    float t = cthdBLL.Tongtien(mahd);
                    if (t > 2000000) {
                        z = t * 10 / 100;
                    } else {
                        z = 0;
                    }
                    tienkhuyenmaihd = z;
                    cthdBLL.suaTienkm(z, mahd);
                } else {
                    cthdBLL.suaTienkm(0, mahd);
                }
                break;
            }
            case "KM008": {
                Date bd = cthdBLL.layngayBD(makmhd);
                // JOptionPane.showMessageDialog(rootPane, bd);
                Date kt = cthdBLL.layngayKT(makmhd);
                // JOptionPane.showMessageDialog(rootPane, kt);
                Date ngaylaphd = cthdBLL.layngayCT(mahd);
                // JOptionPane.showMessageDialog(rootPane, ngaylaphd);
                int a = 1, b = 1;
                float z;
                if (bd.equals(ngaylaphd) || kt.equals(ngaylaphd)) {
                    a = 0;
                } else if (bd.before(ngaylaphd) && kt.after(ngaylaphd)) {
                    b = 0;
                }
                if (a == 0 || b == 0) {
                    float t = cthdBLL.Tongtien(mahd);
                    if (t > 1000000) {
                        z = 50000;
                    } else {
                        z = 0;
                    }
                    tienkhuyenmaihd = z;
                    cthdBLL.suaTienkm(z, mahd);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "ĐK CHƯA ĐÚNG");
                    cthdBLL.suaTienkm(0, mahd);
                }
                break;
            }
            case "KM009": {
                Date bd = cthdBLL.layngayBD(makmhd);
                // JOptionPane.showMessageDialog(rootPane, bd);
                Date kt = cthdBLL.layngayKT(makmhd);
                // JOptionPane.showMessageDialog(rootPane, kt);
                Date ngaylaphd = cthdBLL.layngayCT(mahd);
                // JOptionPane.showMessageDialog(rootPane, ngaylaphd);
                int a = 1, b = 1;
                float z;
                if (bd.equals(ngaylaphd) || kt.equals(ngaylaphd)) {
                    a = 0;
                } else if (bd.before(ngaylaphd) && kt.after(ngaylaphd)) {
                    b = 0;
                }
                if (a == 0 || b == 0) {
                    float t = cthdBLL.Tongtien(mahd);
                    if (t > 3000000) {
                        z = 100000;
                    } else {
                        z = 0;
                    }
                    tienkhuyenmaihd = z;
                    cthdBLL.suaTienkm(z, mahd);
                } else {
                    cthdBLL.suaTienkm(0, mahd);
                }
                break;
            }
        }
        if (tienkhuyenmaihd != 0) {
            float tongtienct = cthdBLL.Tongtien(mahd);
            cthdBLL.suaTongtien(tongtienct - tienkhuyenmaihd, mahd);
            //txtTongtienhoadon
            //float k=tongtienct-tienkhuyenmaihd;
            // txtTongtienhoadon.setText(k);
        }
    }

    public void Laykmsanpham() {//bắt sự kiện cho masp
        String mahd = cbMahd.getText().trim();
        String masp = cbMasp.getText().trim();
        String makmhd = cthdBLL.laymaKM(mahd);
        Date bd = cthdBLL.layngayBD(makmhd);
        // JOptionPane.showMessageDialog(rootPane, bd);
        Date kt = cthdBLL.layngayKT(makmhd);
        // JOptionPane.showMessageDialog(rootPane, kt);
        Date ngaylaphd = cthdBLL.layngayCT(mahd);
        // JOptionPane.showMessageDialog(rootPane, ngaylaphd);
        int a = 1, b = 1;
        //float z;
        if (bd.equals(ngaylaphd) || kt.equals(ngaylaphd)) {
            a = 0;
        } else if (bd.before(ngaylaphd) && kt.after(ngaylaphd)) {
            b = 0;
        }
        int cachgiam = cthdBLL.laycachgiam(makmhd, masp);
        if (a == 0 || b == 0) {
            float z = (float) ((Float.parseFloat(txtThanhtien.getText())) * Float.parseFloat((cachgiam / 100)));
            txtTienkmcthd.setText(String.valueOf(z));
        }
    }

    public void suaTienkmhd() {//them xoa sua
        String mahd = cbMahd.getText();
        float z = cthdBLL.tongkmct(mahd);
        cthdBLL.suaTienkm(z, mahd);
    }

    protected void updateFilter() {
        Object selected = cbTimkiemhoadon.getSelectedItem();
        TableRowSorter<TableModel> sorter = (TableRowSorter<TableModel>) tblHoadon.getRowSorter();
        String text = "(?i)" + txtTimkiemhoadon.getText();
        int col = -1;
        if ("Mã HD".equals(selected)) {
            col = 1;
        } else if ("Mã KH".equals(selected)) {
            col = 2;
        } else if ("Mã NV".equals(selected)) {
            col = 3;
        } else if ("Ngày lập".equals(selected)) {
            col = 7;
        }
        sorter.setRowFilter(RowFilter.regexFilter(text, col));
    }
}
