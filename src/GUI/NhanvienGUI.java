/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.NhanvienBLL;
import DTO.NhanvienDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class NhanvienGUI extends javax.swing.JInternalFrame {

    NhanvienBLL NhanvienBLL = new NhanvienBLL();
    private ArrayList<NhanvienDTO> list;
    DefaultTableModel model;

    public NhanvienGUI() {
        initComponents();
        jRadioButton1.setSelected(true);
         try {
            UIManager.setLookAndFeel(new com.jtattoo.plaf.graphite.GraphiteLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(NhanvienGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //   setLocationRelativeTo(null);
        list = NhanvienBLL.getAllNhanvienDTO();
        model = (DefaultTableModel) tblNhanvien.getModel();
        tblNhanvien.setRowSorter(new TableRowSorter<TableModel>(model));
        /*
        model.setColumnIdentifiers(new Object[]{
            "STT", "MALOAI", "TENLOAI"
        });*/
        category.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                updateFilter();
            }
        });
        txtSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                updateFilter();
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                updateFilter();
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                updateFilter();
            }
        });

        showTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTenNv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMaNv = new javax.swing.JTextField();
        category = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDiachi = new javax.swing.JTextField();
        txtSdt = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnExport = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnLuuthem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanvien = new javax.swing.JTable();

        setTitle("Nhân viên");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(new java.awt.Color(0, 51, 204));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Tên nhân viên:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Mã nhân viên:");

        category.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã nhân viên", "Tên nhân viên", "Ngày sinh", "Giới tính", "Số điện thoại", "Email", "Địa chỉ" }));
        category.setPreferredSize(new java.awt.Dimension(60, 30));
        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });

        txtSearch.setPreferredSize(new java.awt.Dimension(60, 30));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Số điện thoại:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Email:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Ngày sinh:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Địa chỉ:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Giới tính:");

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Nam");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Nữ");

        btnThem.setBackground(new java.awt.Color(153, 153, 255));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/them.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(153, 153, 255));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/xoa.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(153, 153, 255));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sua.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(153, 153, 255));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnThem)
                .addGap(29, 29, 29)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnReset)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExport.setBackground(new java.awt.Color(153, 153, 255));
        btnExport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExport.setText("Export(excel)");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnImport.setBackground(new java.awt.Color(153, 153, 255));
        btnImport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnImport.setText("Import(Excel)");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnLuuthem.setBackground(new java.awt.Color(153, 153, 255));
        btnLuuthem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnLuuthem.setText("Lưu");
        btnLuuthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuthemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnImport)
                .addGap(30, 30, 30)
                .addComponent(btnLuuthem, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuuthem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaNv, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenNv, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDiachi, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(152, 152, 152)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton3))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtTenNv))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMaNv)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDiachi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THÔNG TIN NHÂN VIÊN");

        tblNhanvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        tblNhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã NV", "Tên nhân viên", "Ngày sinh", "Giới tính", "Số điện thoại", "Email", "Địa chỉ"
            }
        ));
        tblNhanvien.setGridColor(new java.awt.Color(0, 0, 0));
        tblNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanvienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanvien);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (this.ktkh() == 1) {
            NhanvienDTO khDTO = new NhanvienDTO();
            txtMaNv.setEditable(true);
            khDTO.setMaNV(txtMaNv.getText());
            khDTO.setTenNV(txtTenNv.getText());
            khDTO.setEmail(txtEmail.getText());
            khDTO.setSdt(txtSdt.getText());
            khDTO.setDiachi(txtDiachi.getText());
            DateFormat dob = new SimpleDateFormat("yyyy-MM-dd");
            Date date = txtNgaysinh.getDate();
            String ngaysinh = dob.format(date);
            khDTO.setNgaysinh(ngaysinh);
            if (buttonGroup1.isSelected(jRadioButton1.getModel())) {
                khDTO.setGioitinh("Nam");
            } else {
                khDTO.setGioitinh("Nữ");
            }
            for (NhanvienDTO sp : list) {
                if (sp.getMaNV().equals(txtMaNv.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "Đã tồn tại mã nhân viên");
                    return;
                }
            }
            try {
                if (NhanvienBLL.addNhanvienDTO(khDTO)) {
                    JOptionPane.showMessageDialog(rootPane, "Thêm thành công");
                    list.add(khDTO);//them vao danh sach
                    showResult();
                    reset();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Thêm không thành công ");
                }
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(rootPane, "Thêm không thành công ");
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (this.ktkh() == 1) {
            int selectedIndex = tblNhanvien.getSelectedRow();
            if (list.size() == 0) {
                JOptionPane.showMessageDialog(rootPane,
                        "Hãy nhập thêm khách hàng rồi sửa");
            } else if (selectedIndex == -1) {
                JOptionPane.showMessageDialog(rootPane,
                        "Hãy chọn dòng có khách hàng cần sửa rồi ấn sửa");
            } else {
                NhanvienDTO khDTO = new NhanvienDTO();
                txtMaNv.setEditable(true);
                khDTO.setMaNV(txtMaNv.getText());
                khDTO.setTenNV(txtTenNv.getText());
                khDTO.setEmail(txtEmail.getText());
                khDTO.setSdt(txtSdt.getText());
                khDTO.setDiachi(txtDiachi.getText());
                DateFormat dob = new SimpleDateFormat("yyyy-MM-dd");
                Date date = txtNgaysinh.getDate();
                String ngaysinh = dob.format(date);
                khDTO.setNgaysinh(ngaysinh);
                if (buttonGroup1.isSelected(jRadioButton1.getModel())) {
                    khDTO.setGioitinh("Nam");
                } else {
                    khDTO.setGioitinh("Nữ");
                }
                try {
                    if (NhanvienBLL.suaNhanvienDTO(khDTO)) {
                        JOptionPane.showMessageDialog(rootPane, "Sửa thành công");
                        model.setRowCount(0);
                        list = NhanvienBLL.getAllNhanvienDTO();
                        showTable();
                        reset();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Sửa không thành công ");
                    }
                } catch (NullPointerException e) {
                    JOptionPane.showMessageDialog(rootPane, "Thêm không thành công ");
                }
            }
        }
        btnThem.setEnabled(true);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int removeIndex = tblNhanvien.getSelectedRow();
        if (removeIndex == -1) {
            JOptionPane.showMessageDialog(rootPane,
                    "Hãy chọn một dòng rồi ấn nút xóa");
        } else if (list.size() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                    "Không có khách hàng nào để xóa");
        } else {
            NhanvienDTO NhanvienDTO = new NhanvienDTO();
            NhanvienDTO.setMaNV(txtMaNv.getText());
            if (NhanvienBLL.xoaNhanvienDTO(NhanvienDTO)) {
                if (JOptionPane.showConfirmDialog(this, "Xoá nhân viên?", "Confirm",
                        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    model.setRowCount(0);
                    list = new NhanvienBLL().getAllNhanvienDTO();
                    showTable();
                }
                reset();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Xóa không thành công ");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
        Object selected = category.getSelectedItem();
        if ("Nâng cao...".equals(selected) == false) {
            list.clear();
            list = NhanvienBLL.getAllNhanvienDTO();
            model.setRowCount(0);
            showTable();
        }
    }//GEN-LAST:event_categoryActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void tblNhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanvienMouseClicked
        int i = tblNhanvien.getSelectedRow();
        txtMaNv.enable(false);
        txtMaNv.setText(tblNhanvien.getModel().getValueAt(i, 1).toString());
        txtTenNv.setText(tblNhanvien.getModel().getValueAt(i, 2).toString());
        String date = tblNhanvien.getModel().getValueAt(i, 3).toString();
        try {
            Date dob = new SimpleDateFormat("yyyy-MM-dd").parse(date);
            txtNgaysinh.setDate(dob);
        } catch (ParseException ex) {
            Logger.getLogger(NhanvienGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (tblNhanvien.getModel().getValueAt(i, 4).toString().trim().equals("Nam")) {
            jRadioButton1.setSelected(true);
        } else {
            jRadioButton3.setSelected(true);
        }
        txtSdt.setText(tblNhanvien.getModel().getValueAt(i, 5).toString());
        txtEmail.setText(tblNhanvien.getModel().getValueAt(i, 6).toString());
        txtDiachi.setText(tblNhanvien.getModel().getValueAt(i, 7).toString());
    }//GEN-LAST:event_tblNhanvienMouseClicked

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;

        String[] title = new String[]{"STT", "Mã NV", "Tên nhân viên  ", "Ngày sinh", " Giới tính", "Số điện thoại", "Email", "Địa chỉ"};
        Row row;
        Cell cell;
        int RowIndex = 0, ColIndex = 0;

        JFileChooser excelFileChooser = new JFileChooser("C:\\temp");
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showSaveDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheeta");

                row = excelSheet.createRow(RowIndex++);
                for (int i = 0; i < title.length; i++) {
                    cell = row.createCell(ColIndex++);
                    cell.setCellValue(title[i]);
                    cell.setCellStyle(createCellStyleForTitle(excelSheet));
                }

                for (int i = 1; i < tblNhanvien.getRowCount() + 1; i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < title.length; j++) {
                        XSSFCell excelCell = excelRow.createCell(j);
                        excelCell.setCellValue(model.getValueAt(i - 1, j).toString());
                    }
                }
                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Exported Successfully ! ");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }
                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnExportActionPerformed
    public CellStyle createCellStyleForTitle(Sheet sheet) {
        Font font = sheet.getWorkbook().createFont();
        font.setFontName("Times New Roman");
        font.setBold(true);
        font.setFontHeightInPoints((short) 13); // font size
        font.setColor(IndexedColors.WHITE.getIndex()); // text color
        // Tạo cell style áp dụng font ở trên
        // Sử dụng màu nền xanh (Blue), định dạng border dưới 
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        cellStyle.setFont(font);
        cellStyle.setAlignment(HorizontalAlignment.CENTER);
        cellStyle.setFillForegroundColor(IndexedColors.DARK_BLUE.getIndex());
        cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        cellStyle.setBorderBottom(BorderStyle.THIN);
        return cellStyle;
    }
    private void btnLuuthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuthemActionPerformed
        NhanvienBLL bus = new NhanvienBLL();
        //  bus.DeleteAll();
        ArrayList<NhanvienDTO> ds = new ArrayList<NhanvienDTO>();
        for (int i = 0; i < tblNhanvien.getRowCount(); i++) {
            NhanvienDTO nv = getSanphamFromModel(i);
            ds.add(nv);
        }
        int dem = 0;
        for (int i = 0; i < ds.size(); i++) {
            if (bus.addNhanvienDTO(ds.get(i))) {
                dem++;
            }
        }
        if (dem == 0) {
            JOptionPane.showMessageDialog(rootPane, "Không có nhân viên nào được thêm");
        } else {
            JOptionPane.showMessageDialog(rootPane, "có " + (dem) + "nhân viên được thêm");
        }
        model.setRowCount(0);
        list = NhanvienBLL.getAllNhanvienDTO();
        showTable();
    }//GEN-LAST:event_btnLuuthemActionPerformed
    public NhanvienDTO getSanphamFromModel(int i) {
        NhanvienDTO nv = new NhanvienDTO();
        nv.setMaNV(tblNhanvien.getValueAt(i, 1).toString());
        nv.setTenNV(tblNhanvien.getValueAt(i, 2).toString());
        nv.setNgaysinh(tblNhanvien.getValueAt(i, 3).toString());
        nv.setGioitinh((tblNhanvien.getValueAt(i, 4).toString()));
        nv.setSdt((tblNhanvien.getValueAt(i, 5).toString()));
        nv.setEmail((tblNhanvien.getValueAt(i, 6).toString()));
        nv.setDiachi((tblNhanvien.getValueAt(i, 7).toString()));
        return nv;
    }
    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        model.setRowCount(0);
        File excelFile;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelJTableImport = null;

        String defaultCurentDirectoryPath = "C:\\temp";
        JFileChooser excelFileChooser = new JFileChooser(defaultCurentDirectoryPath);
        int excelChooser = excelFileChooser.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);

                excelJTableImport = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);
                for (int row = 1; row < excelSheet.getLastRowNum() + 1; row++) {
                    XSSFRow excelRow = excelSheet.getRow(row);

                    XSSFCell excelSTT = excelRow.getCell(0);
                    XSSFCell excelManv = excelRow.getCell(1);
                    XSSFCell excelTennv = excelRow.getCell(2);
                    XSSFCell excelNgaysinh = excelRow.getCell(3);
                    XSSFCell excelgioitinh = excelRow.getCell(4);
                    XSSFCell excelsodienthoai = excelRow.getCell(5);
                    XSSFCell excelemail = excelRow.getCell(6);
                    XSSFCell exceldiachi = excelRow.getCell(7);
                    model.addRow(new Object[]{
                        excelSTT, excelManv, excelTennv, excelNgaysinh, excelgioitinh, excelsodienthoai,
                        excelemail, exceldiachi
                    });
                }
                JOptionPane.showMessageDialog(null, "Imported Successfully ! ");
            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnImportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnLuuthem;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNhanvien;
    private javax.swing.JTextField txtDiachi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMaNv;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTenNv;
    // End of variables declaration//GEN-END:variables
public void showTable() {
        int i = 1;
        for (NhanvienDTO khDTO : list) {
            model.addRow(new Object[]{
                i++, khDTO.getMaNV(), khDTO.getTenNV(),
                khDTO.getNgaysinh(), khDTO.getGioitinh(), khDTO.getSdt(),
                khDTO.getEmail(), khDTO.getDiachi()
            });
        }
    }

    public void showResult() {
        int i = list.size();
        NhanvienDTO khDTO = list.get(list.size() - 1);
        model.addRow(new Object[]{
            i++, khDTO.getMaNV(), khDTO.getTenNV(),
            khDTO.getNgaysinh(), khDTO.getGioitinh(), khDTO.getSdt(),
            khDTO.getEmail(), khDTO.getDiachi()
        });
    }

    public void reset() {
        txtMaNv.setEnabled(true);
        txtMaNv.setText("");
        txtTenNv.setText("");
        txtSdt.setText("");
        txtEmail.setText("");
        txtDiachi.setText("");
        txtNgaysinh.setDate(null);
    }

    protected void updateFilter() {
        Object selected = category.getSelectedItem();
        TableRowSorter<TableModel> sorter = (TableRowSorter<TableModel>) tblNhanvien.getRowSorter();
        String text = "(?i)" + txtSearch.getText();
        int col = -1;
        if ("Mã nhân viên".equals(selected)) {
            col = 1;
        } else if ("Tên nhân viên".equals(selected)) {
            col = 2;
        } else if ("Ngày sinh".equals(selected)) {
            col = 3;
        } else if ("Giới tính".equals(selected)) {
            col = 4;
        } else if ("Số điện thoại".equals(selected)) {
            col = 5;
        } else if ("Email".equals(selected)) {
            col = 6;
        } else if ("Địa chỉ".equals(selected)) {
            col = 7;
        }
        sorter.setRowFilter(RowFilter.regexFilter(text, col));
    }

    private int ktkh() {
        int fag = 1;

        if (txtMaNv.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập mã nhân viên");
            fag = 0;
        } else if (txtTenNv.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập tên nhân viên");
            fag = 0;
        } else if (txtSdt.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập số điện thoại ");
            fag = 0;
        } else if (txtEmail.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập email ");
            fag = 0;
        } else if (txtDiachi.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập địa chỉ ");
            fag = 0;
        }
        return fag;
    }

}
